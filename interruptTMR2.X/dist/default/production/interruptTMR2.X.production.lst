

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Jan 24 06:30:54 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169                           
   170                           	psect	idataBANK0
   171     00A4                     __pidataBANK0:
   172                           
   173                           ;initializer for _data
   174     00A4  3455               	retlw	85
   175     00A5  3450               	retlw	80
   176     00A6  3453               	retlw	83
   177     00A7  3420               	retlw	32
   178     0008                     _PORTDbits	set	8
   179     0012                     _T2CON	set	18
   180     0007                     _PORTCbits	set	7
   181     0092                     _TMR2ON	set	146
   182     005F                     _GIE	set	95
   183     005E                     _PEIE	set	94
   184     0061                     _TMR2IF	set	97
   185     0092                     _PR2	set	146
   186     0461                     _TMR2IE	set	1121
   187     0442                     _TRISD2	set	1090
   188     043C                     _TRISC4	set	1084
   189                           
   190                           	psect	cinit
   191     000F                     start_initialization:	
   192                           ; #config settings
   193                           
   194     000F                     __initialization:
   195                           
   196                           ; Initialize objects allocated to BANK0
   197     000F  120A  118A  20A4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   198     0014  00A0               	movwf	__pdataBANK0& (0+127)
   199     0015  120A  118A  20A5  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   200     001A  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   201     001B  120A  118A  20A6  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   202     0020  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   203     0021  120A  118A  20A7  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   204     0026  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   205                           
   206                           ; Clear objects allocated to COMMON
   207     0027  01F7               	clrf	__pbssCOMMON& (0+127)
   208     0028  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   209     0029  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   210     002A  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   211     002B                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     002B                     __end_of__initialization:
   215     002B  0183               	clrf	3
   216     002C  120A  118A  282F   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMMON
   219     0077                     __pbssCOMMON:
   220     0077                     _timeAux:
   221     0077                     	ds	2
   222     0079                     _count:
   223     0079                     	ds	2
   224                           
   225                           	psect	dataBANK0
   226     0020                     __pdataBANK0:
   227     0020                     _data:
   228     0020                     	ds	4
   229                           
   230                           	psect	cstackCOMMON
   231     0070                     __pcstackCOMMON:
   232     0070                     ?_myInterrupt:
   233     0070                     ??_myInterrupt:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241     0070                     	ds	4
   242     0074                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x4
   245     0074                     	ds	3
   246                           
   247                           	psect	maintext
   248     002F                     __pmaintext:	
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 54 in file "main.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;		None
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, btemp+1
   263 ;; Tracked objects:
   264 ;;		On entry : B00/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   268 ;;      Params:         0       0       0       0       0
   269 ;;      Locals:         0       0       0       0       0
   270 ;;      Temps:          3       0       0       0       0
   271 ;;      Totals:         3       0       0       0       0
   272 ;;Total ram usage:        3 bytes
   273 ;; Hardware stack levels required when called: 1
   274 ;; This function calls:
   275 ;;		Nothing
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281     002F                     _main:	
   282                           ;psect for function _main
   283                           
   284     002F                     l610:	
   285                           ;incstack = 0
   286                           ; Regs used in _main: [wreg+status,2+btemp+1]
   287                           
   288                           
   289                           ;main.c: 55:     }
   290     002F  1683               	bsf	3,5	;RP0=1, select bank1
   291     0030  1303               	bcf	3,6	;RP1=0, select bank1
   292     0031  1207               	bcf	7,4	;volatile
   293                           
   294                           ;main.c: 56:     return;
   295     0032  1108               	bcf	8,2	;volatile
   296     0033                     l612:
   297     0033  3008               	movlw	8
   298     0034  1283               	bcf	3,5	;RP0=0, select bank0
   299     0035  1303               	bcf	3,6	;RP1=0, select bank0
   300     0036  0092               	movwf	18	;volatile
   301     0037  3015               	movlw	21
   302     0038  1683               	bsf	3,5	;RP0=1, select bank1
   303     0039  1303               	bcf	3,6	;RP1=0, select bank1
   304     003A  0092               	movwf	18	;volatile
   305     003B                     l614:
   306     003B  148C               	bsf	12,1	;volatile
   307     003C                     l616:
   308     003C  170B               	bsf	11,6	;volatile
   309     003D                     l618:
   310     003D  178B               	bsf	11,7	;volatile
   311     003E                     l620:
   312     003E  1283               	bcf	3,5	;RP0=0, select bank0
   313     003F  1303               	bcf	3,6	;RP1=0, select bank0
   314     0040  1512               	bsf	18,2	;volatile
   315     0041                     l622:
   316     0041  1108               	bcf	8,2	;volatile
   317     0042                     l624:
   318     0042  0878               	movf	_timeAux+1,w
   319     0043  3A80               	xorlw	128
   320     0044  00FF               	movwf	btemp+1
   321     0045  3080               	movlw	128
   322     0046  027F               	subwf	btemp+1,w
   323     0047  1D03               	skipz
   324     0048  284B               	goto	u55
   325     0049  303A               	movlw	58
   326     004A  0277               	subwf	_timeAux,w
   327     004B                     u55:
   328     004B  1C03               	skipc
   329     004C  284E               	goto	u51
   330     004D  284F               	goto	u50
   331     004E                     u51:
   332     004E  2851               	goto	l628
   333     004F                     u50:
   334     004F                     l626:
   335     004F  01F7               	clrf	_timeAux
   336     0050  01F8               	clrf	_timeAux+1
   337     0051                     l628:
   338     0051  3003               	movlw	3
   339     0052  00F6               	movwf	??_main+2
   340     0053  308A               	movlw	138
   341     0054  00F5               	movwf	??_main+1
   342     0055  3055               	movlw	85
   343     0056  00F4               	movwf	??_main
   344     0057                     u67:
   345     0057  0BF4               	decfsz	??_main,f
   346     0058  2857               	goto	u67
   347     0059  0BF5               	decfsz	??_main+1,f
   348     005A  2857               	goto	u67
   349     005B  0BF6               	decfsz	??_main+2,f
   350     005C  2857               	goto	u67
   351     005D  285E               	nop2
   352     005E                     l630:
   353     005E  1283               	bcf	3,5	;RP0=0, select bank0
   354     005F  1303               	bcf	3,6	;RP1=0, select bank0
   355     0060  1508               	bsf	8,2	;volatile
   356     0061                     l632:
   357     0061  3001               	movlw	1
   358     0062  07F7               	addwf	_timeAux,f
   359     0063  1803               	skipnc
   360     0064  0AF8               	incf	_timeAux+1,f
   361     0065  3000               	movlw	0
   362     0066  07F8               	addwf	_timeAux+1,f
   363     0067  2841               	goto	l622
   364     0068  120A  118A  280C   	ljmp	start
   365     006B                     __end_of_main:
   366                           
   367                           	psect	text1
   368     006B                     __ptext1:	
   369 ;; *************** function _myInterrupt *****************
   370 ;; Defined at:
   371 ;;		line 28 in file "main.c"
   372 ;; Parameters:    Size  Location     Type
   373 ;;		None
   374 ;; Auto vars:     Size  Location     Type
   375 ;;		None
   376 ;; Return value:  Size  Location     Type
   377 ;;                  1    wreg      void 
   378 ;; Registers used:
   379 ;;		wreg, status,2, status,0
   380 ;; Tracked objects:
   381 ;;		On entry : 0/0
   382 ;;		On exit  : 0/0
   383 ;;		Unchanged: 0/0
   384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   385 ;;      Params:         0       0       0       0       0
   386 ;;      Locals:         0       0       0       0       0
   387 ;;      Temps:          4       0       0       0       0
   388 ;;      Totals:         4       0       0       0       0
   389 ;;Total ram usage:        4 bytes
   390 ;; Hardware stack levels used: 1
   391 ;; This function calls:
   392 ;;		Nothing
   393 ;; This function is called by:
   394 ;;		Interrupt level 1
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398     006B                     _myInterrupt:	
   399                           ;psect for function _myInterrupt
   400                           
   401     006B                     i1l592:
   402                           
   403                           ;main.c: 34: 
   404     006B  1283               	bcf	3,5	;RP0=0, select bank0
   405     006C  1303               	bcf	3,6	;RP1=0, select bank0
   406     006D  1C8C               	btfss	12,1	;volatile
   407     006E  2870               	goto	u1_21
   408     006F  2871               	goto	u1_20
   409     0070                     u1_21:
   410     0070  289D               	goto	i1l39
   411     0071                     u1_20:
   412     0071                     i1l594:
   413                           
   414                           ;main.c: 35: void main(void) {
   415     0071  3072               	movlw	114
   416     0072  0679               	xorwf	_count,w
   417     0073  3004               	movlw	4
   418     0074  1903               	skipnz
   419     0075  067A               	xorwf	_count+1,w
   420     0076  1D03               	btfss	3,2
   421     0077  2879               	goto	u2_21
   422     0078  287A               	goto	u2_20
   423     0079                     u2_21:
   424     0079  287C               	goto	i1l598
   425     007A                     u2_20:
   426     007A                     i1l596:
   427                           
   428                           ;main.c: 36:     TRISC4 = 0;;main.c: 37:     TRISD2 = 0;
   429     007A  01F9               	clrf	_count
   430     007B  01FA               	clrf	_count+1
   431     007C                     i1l598:
   432                           
   433                           ;main.c: 39:     T2CON = 0b00001000;
   434     007C  0879               	movf	_count,w
   435     007D  047A               	iorwf	_count+1,w
   436     007E  1D03               	btfss	3,2
   437     007F  2881               	goto	u3_21
   438     0080  2882               	goto	u3_20
   439     0081                     u3_21:
   440     0081  2883               	goto	i1l602
   441     0082                     u3_20:
   442     0082                     i1l600:
   443                           
   444                           ;main.c: 40:     PR2 = 21;
   445     0082  1607               	bsf	7,4	;volatile
   446     0083                     i1l602:
   447                           
   448                           ;main.c: 42:     PEIE = 1;
   449     0083  0877               	movf	_timeAux,w
   450     0084  3E39               	addlw	57
   451     0085  00F0               	movwf	??_myInterrupt
   452     0086  0878               	movf	_timeAux+1,w
   453     0087  1803               	skipnc
   454     0088  3E01               	addlw	1
   455     0089  3E00               	addlw	0
   456     008A  00F1               	movwf	??_myInterrupt+1
   457     008B  087A               	movf	_count+1,w
   458     008C  0671               	xorwf	??_myInterrupt+1,w
   459     008D  1D03               	skipz
   460     008E  2891               	goto	u4_25
   461     008F  0879               	movf	_count,w
   462     0090  0670               	xorwf	??_myInterrupt,w
   463     0091                     u4_25:
   464     0091  1D03               	skipz
   465     0092  2894               	goto	u4_21
   466     0093  2895               	goto	u4_20
   467     0094                     u4_21:
   468     0094  2896               	goto	i1l606
   469     0095                     u4_20:
   470     0095                     i1l604:
   471                           
   472                           ;main.c: 43:     GIE = 1;
   473     0095  1207               	bcf	7,4	;volatile
   474     0096                     i1l606:
   475                           
   476                           ;main.c: 47:     while (1){
   477     0096  3001               	movlw	1
   478     0097  07F9               	addwf	_count,f
   479     0098  1803               	skipnc
   480     0099  0AFA               	incf	_count+1,f
   481     009A  3000               	movlw	0
   482     009B  07FA               	addwf	_count+1,f
   483     009C                     i1l608:
   484                           
   485                           ;main.c: 48:         PORTDbits.RD2 = 0;
   486     009C  108C               	bcf	12,1	;volatile
   487     009D                     i1l39:
   488     009D  0873               	movf	??_myInterrupt+3,w
   489     009E  008A               	movwf	10
   490     009F  0E72               	swapf	??_myInterrupt+2,w
   491     00A0  0083               	movwf	3
   492     00A1  0EFE               	swapf	btemp,f
   493     00A2  0E7E               	swapf	btemp,w
   494     00A3  0009               	retfie
   495     00A4                     __end_of_myInterrupt:
   496     007E                     btemp	set	126	;btemp
   497     007E                     wtemp0	set	126
   498                           
   499                           	psect	intentry
   500     0004                     __pintentry:	
   501                           ;incstack = 0
   502                           ; Regs used in _myInterrupt: [wreg+status,2+status,0]
   503                           
   504     0004                     interrupt_function:
   505     007E                     saved_w	set	btemp
   506     0004  00FE               	movwf	btemp
   507     0005  0E03               	swapf	3,w
   508     0006  00F2               	movwf	??_myInterrupt+2
   509     0007  080A               	movf	10,w
   510     0008  00F3               	movwf	??_myInterrupt+3
   511     0009  120A  118A  286B   	ljmp	_myInterrupt
   512                           
   513                           	psect	config
   514                           
   515                           ;Config register CONFIG @ 0x2007
   516                           ;	Oscillator Selection bits
   517                           ;	FOSC = HS, HS oscillator
   518                           ;	Watchdog Timer Enable bit
   519                           ;	WDTE = OFF, WDT disabled
   520                           ;	Power-up Timer Enable bit
   521                           ;	PWRTE = OFF, PWRT disabled
   522                           ;	Brown-out Reset Enable bit
   523                           ;	BOREN = ON, BOR enabled
   524                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   525                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   526                           ;	Data EEPROM Memory Code Protection bit
   527                           ;	CPD = OFF, Data EEPROM code protection off
   528                           ;	Flash Program Memory Write Enable bits
   529                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   530                           ;	In-Circuit Debugger Mode bit
   531                           ;	DEBUG = 0x1, unprogrammed default
   532                           ;	Flash Program Memory Code Protection bit
   533                           ;	CP = OFF, Code protection off
   534     2007                     	org	8199
   535     2007  3F7A               	dw	16250

Data Sizes:
    Strings     0
    Constant    0
    Data        4
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _myInterrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myInterrupt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myInterrupt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myInterrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              4 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myInterrupt                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myInterrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       4       5        5.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       F      12        0.0%
ABS                  0      0       F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Jan 24 06:30:54 2024

                     u50 004F                       u51 004E                       u55 004B  
                     u67 0057                      l610 002F                      l620 003E  
                    l612 0033                      l630 005E                      l622 0041  
                    l614 003B                      l632 0061                      l624 0042  
                    l616 003C                      l626 004F                      l618 003D  
                    l628 0051                      _GIE 005F                      _PR2 0092  
                   _PEIE 005E                     i1l39 009D                     u1_20 0071  
                   u1_21 0070                     u2_20 007A                     u2_21 0079  
                   u3_20 0082                     u3_21 0081                     u4_20 0095  
                   u4_21 0094                     u4_25 0091                     _data 0020  
                   _main 002F                     btemp 007E                     start 000C  
                  ?_main 0070                    _T2CON 0012                    i1l600 0082  
                  i1l602 0083                    i1l604 0095                    i1l606 0096  
                  i1l608 009C                    i1l592 006B                    i1l594 0071  
                  i1l596 007A                    i1l598 007C                    _count 0079  
                  pclath 000A                    status 0003                    wtemp0 007E  
           ?_myInterrupt 0070          __initialization 000F             __end_of_main 006B  
                 ??_main 0074                   _TMR2IE 0461                   _TMR2IF 0061  
                 _TMR2ON 0092                   _TRISC4 043C                   _TRISD2 0442  
                 saved_w 007E  __end_of__initialization 002B           __pcstackCOMMON 0070  
           __pidataBANK0 00A4               __pmaintext 002F               __pintentry 0004  
                __ptext1 006B                  _timeAux 0077     end_of_initialization 002B  
              _PORTCbits 0007                _PORTDbits 0008      start_initialization 000F  
            __pdataBANK0 0020              __pbssCOMMON 0077                ___latbits 0002  
          ??_myInterrupt 0070        interrupt_function 0004      __end_of_myInterrupt 00A4  
            _myInterrupt 006B                 intlevel1 0000  
